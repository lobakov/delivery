openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Delivery
  description: Responsible for accounting for couriers, order dispatching, and delivery
tags:
  - name: Order
  - name: Courier
paths:
  /orders/v1:
    post:
      summary: Create order
      description: Allows to create an order
      tags:
        - Order
      operationId: CreateOrder
      responses:
        201:
          description: Successful response
        400:
          description: Bad params
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/v1/{orderId}/assign:
    post:
      summary: Assign Order
      description: Allows to assign an order
      tags:
        - Order
      operationId: AssignOrder
      parameters:
        - name: orderId
          in: path
          description: courier Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful response
        400:
          description: Order has an Illegal status
        404:
          description: Order not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/v1/{orderId}:
    get:
      summary: Get Order info
      description: Allows to get the contents of the order
      tags:
        - Order
      operationId: GetOrder
      parameters:
        - name: orderId
          in: path
          description: order id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /couriers/v1/{courierId}/start-working-day:
    post:
      summary: Start the working day
      description: Allows the courier to start his working day
      tags:
        - Courier
      operationId: StartWorkingDay
      parameters:
        - name: courierId
          in: path
          description: courier Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful response
        400:
          description: Courier has an Illegal status
        404:
          description: Courier not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: './http-api.yml'
  /couriers/v1/{courierId}/finish-working-day:
    post:
      summary: Finish the working day
      description: Allows the courier to end the working day
      tags:
        - Courier
      operationId: FinishWorkingDay
      parameters:
        - name: courierId
          in: path
          description: courier Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful response
        400:
          description: Courier has an Illegal status
        404:
          description: Courier not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /couriers/v1/{courierId}/move-to-location:
    post:
      summary: Move the courier one step to the location
      description: Allows the courier to move the location 1 step to the location
      tags:
        - Courier
      operationId: MoveToLocation
      parameters:
        - name: courierId
          in: path
          description: courier Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful response
        400:
          description: Courier has an Illegal status
        404:
          description: Courier not found
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Location:
      allOf:
        - required:
            - abscissaValue
            - ordinateValue
          properties:
            abscissaValue:
              type: integer
              description: abscissaValue or X
              maximum: 10
              minimum: 1
            ordinateValue:
              type: integer
              description: ordinateValue or Y
              maximum: 10
              minimum: 1
    Order:
      allOf:
        - required:
            - id
          properties:
            id:
              type: string
              format: uuid
              description: id
            courierId:
              type: string
              format: uuid
              description: courierId
            courierLocation:
              $ref: '#/components/schemas/Location'
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error description
